@page "/Login"
@namespace LogicComponent
@using FamilyManagerAssignment.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    
    <NotAuthorized>
        <div class="form-group">
            <label>User name:</label>
            <input type="text" placeholder="user name" @bind-value="username"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" placeholder="password" @bind-value="password"/>
        </div>
        <div style="color:red">@errorMessage </div>
        
        <a href="" @onclick="PerformLoginAsync">
            Login
        </a>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogOutAsync">
            Log Out
        </a>
    </Authorized>
</AuthorizeView>


@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task PerformLoginAsync()
    {
        errorMessage = "";
        try
        {
             await ((CustomAuthenticationStateProvider)  AuthenticationStateProvider).ValidateLoginAsync(username,password);
            username = "";
            password = "";
        }
        catch(Exception e)
        {
            errorMessage = e.Message;
        }
    }

    private async Task PerformLogOutAsync()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).LogOutAsync();
            NavigationManager.NavigateTo("/");
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
        }
    }
}