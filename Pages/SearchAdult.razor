@page "/SearchAdult"
@using Models
@using System.Net.Http.Json
@using FamilyManagerAssignment.Services
@using FamilyManagerAssignment.Services.Implementation
<h3>Search Adults</h3>
<form>
    <p>
        Name: <input type="text" @bind-value="SearchString"/>
        <input type="button" value="Filter" @onclick="SearchAsync"/>
    </p>
</form>
@if (returnedAdults != null)
{
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>HairColour</th>
            <th>EyeColour</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
            <th>Job Title</th>
            <th>Salary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var adult in returnedAdults)
        {
            <tr>
                <td>@adult.Persona.Id.ToString()</td>
                <td>@adult.Persona.FirstName</td>
                <td>@adult.Persona.LastName</td>
                <td>@adult.Persona.HairColor</td>
                <td>@adult.Persona.EyeColor</td>
                <td>@adult.Persona.Age.ToString()</td>
                <td>@adult.Persona.Weight.ToString()</td>
                <td>@adult.Persona.Height.ToString()</td>
                <td>@adult.Persona.Sex</td>
                <td>@adult.AdultJob.JobTitle</td>
                <td>@adult.AdultJob.Salary.ToString()</td>
            </tr>
        }
        </tbody>
    </table>
}
@code {
    private IList<Adult> returnedAdults;
    private string SearchString;
    IAdultConnection adultConnection = new AdultConnectionImpl();
    private async Task SearchAsync()
    {
         Console.WriteLine(SearchString);
        returnedAdults = await adultConnection.getAdultByCriteriaAsync(SearchString);
    }
    
}